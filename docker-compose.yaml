services:
  rabbit-setup-service:
    build: rabbitServerSetup/
    container_name: rabbit-setup
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - haddoservnet
    environment:
      DEFAULT_RABBIT_URL: ${DEFAULT_RABBIT_URL}

  rabbitmq:
    # watch:
    #   - action: sync+restart # Sync changes and restart the service
    #     path: ./rabbitMq # Path to watch
    #     target: /app
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBIT_PORT}:${RABBIT_PORT}"
      - "${RABBIT_ADMIN_PORT}:${RABBIT_ADMIN_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_DEFAULT_PASS}
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
      # - type: bind
      #   source: ./rabbitMq
      #   target: /app
    healthcheck:
      test: rabbitmq-diagnostics  check_port_connectivity
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - haddoservnet

networks:
  haddoservnet:
    external: true

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local